{"ast":null,"code":"var _jsxFileName = \"S:\\\\login-sign-page\\\\frontend\\\\src\\\\pages\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n// --- 1. IMPORT THE NEW COMPONENTS ---\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { handleError, handleSuccess } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [signupInfo, setSignupInfo] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n\n  // --- 2. YOUR CLIENT ID HAS BEEN ADDED ---\n  const googleClientId = \"438675795459-cm0g2oguf5cq67jck34gpfa015vq5u23.apps.googleusercontent.com\";\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSignupInfo(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSignup = async e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      password\n    } = signupInfo;\n    if (!name || !email || !password) {\n      return handleError('Name, email, and password are required');\n    }\n    try {\n      const url = \"http://localhost:8080/auth/signup\";\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(signupInfo)\n      });\n      const result = await response.json();\n      const {\n        success,\n        message,\n        error\n      } = result;\n      if (success) {\n        handleSuccess(message);\n        setTimeout(() => navigate('/login'), 1000);\n      } else {\n        handleError(message || (error === null || error === void 0 ? void 0 : error.details[0].message));\n      }\n    } catch (err) {\n      handleError(err.message);\n    }\n  };\n\n  // --- 3. UPDATED GOOGLE SUCCESS HANDLER ---\n  // The response object is different in the new library\n  const handleGoogleSuccess = async credentialResponse => {\n    try {\n      const url = \"http://localhost:8080/auth/google-signup\";\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        // The token is now in credentialResponse.credential\n        body: JSON.stringify({\n          token: credentialResponse.credential\n        })\n      });\n      const result = await response.json();\n      const {\n        success,\n        message,\n        jwtToken,\n        name,\n        email\n      } = result;\n      if (success) {\n        handleSuccess(message);\n        localStorage.setItem('token', jwtToken);\n        localStorage.setItem('loggedInUser', JSON.stringify({\n          name,\n          email\n        }));\n        setTimeout(() => navigate('/home'), 1000);\n      } else {\n        handleError(message);\n      }\n    } catch (err) {\n      handleError(err.message);\n    }\n  };\n  const handleGoogleFailure = error => {\n    console.error(\"Google login failed\", error);\n    handleError(\"Google signup failed. Please try again.\");\n  };\n  return (\n    /*#__PURE__*/\n    // --- 4. WRAP YOUR COMPONENT WITH THE PROVIDER ---\n    _jsxDEV(GoogleOAuthProvider, {\n      clientId: googleClientId,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSignup,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange,\n              type: \"text\",\n              name: \"name\",\n              autoFocus: true,\n              placeholder: \"Enter your name...\",\n              value: signupInfo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange,\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Enter your email...\",\n              value: signupInfo.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange,\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Enter your password...\",\n              value: signupInfo.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"or-divider\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"OR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"google-login-container\",\n            children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n              onSuccess: handleGoogleSuccess,\n              onError: handleGoogleFailure\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \" Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(Signup, \"9xC2OPLC9SfJH3VH//Uh78gH1Xc=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","Link","useNavigate","ToastContainer","GoogleOAuthProvider","GoogleLogin","handleError","handleSuccess","jsxDEV","_jsxDEV","Signup","_s","signupInfo","setSignupInfo","name","email","password","navigate","googleClientId","handleChange","e","value","target","prev","handleSignup","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","result","json","success","message","error","setTimeout","details","err","handleGoogleSuccess","credentialResponse","token","credential","jwtToken","localStorage","setItem","handleGoogleFailure","console","clientId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","type","autoFocus","placeholder","onSuccess","onError","to","_c","$RefreshReg$"],"sources":["S:/login-sign-page/frontend/src/pages/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n// --- 1. IMPORT THE NEW COMPONENTS ---\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { handleError, handleSuccess } from '../utils';\n\nfunction Signup() {\n    const [signupInfo, setSignupInfo] = useState({\n        name: '',\n        email: '',\n        password: ''\n    });\n\n    const navigate = useNavigate();\n\n    // --- 2. YOUR CLIENT ID HAS BEEN ADDED ---\n    const googleClientId = \"438675795459-cm0g2oguf5cq67jck34gpfa015vq5u23.apps.googleusercontent.com\";\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setSignupInfo(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleSignup = async (e) => {\n        e.preventDefault();\n        const { name, email, password } = signupInfo;\n        if (!name || !email || !password) {\n            return handleError('Name, email, and password are required');\n        }\n        try {\n            const url = \"http://localhost:8080/auth/signup\";\n            const response = await fetch(url, {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(signupInfo)\n            });\n            const result = await response.json();\n            const { success, message, error } = result;\n            if (success) {\n                handleSuccess(message);\n                setTimeout(() => navigate('/login'), 1000);\n            } else {\n                handleError(message || error?.details[0].message);\n            }\n        } catch (err) {\n            handleError(err.message);\n        }\n    };\n\n    // --- 3. UPDATED GOOGLE SUCCESS HANDLER ---\n    // The response object is different in the new library\n    const handleGoogleSuccess = async (credentialResponse) => {\n        try {\n            const url = \"http://localhost:8080/auth/google-signup\";\n            const response = await fetch(url, {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                // The token is now in credentialResponse.credential\n                body: JSON.stringify({\n                    token: credentialResponse.credential\n                })\n            });\n            const result = await response.json();\n            const { success, message, jwtToken, name, email } = result;\n            if (success) {\n                handleSuccess(message);\n                localStorage.setItem('token', jwtToken);\n                localStorage.setItem('loggedInUser', JSON.stringify({ name, email }));\n                setTimeout(() => navigate('/home'), 1000);\n            } else {\n                handleError(message);\n            }\n        } catch (err) {\n            handleError(err.message);\n        }\n    };\n\n    const handleGoogleFailure = (error) => {\n        console.error(\"Google login failed\", error);\n        handleError(\"Google signup failed. Please try again.\");\n    };\n\n    return (\n        // --- 4. WRAP YOUR COMPONENT WITH THE PROVIDER ---\n        <GoogleOAuthProvider clientId={googleClientId}>\n            <div className='container'>\n                <h1>Signup</h1>\n                <form onSubmit={handleSignup}>\n                    <div>\n                        <label htmlFor='name'>Name</label>\n                        <input\n                            onChange={handleChange}\n                            type='text'\n                            name='name'\n                            autoFocus\n                            placeholder='Enter your name...'\n                            value={signupInfo.name}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor='email'>Email</label>\n                        <input\n                            onChange={handleChange}\n                            type='email'\n                            name='email'\n                            placeholder='Enter your email...'\n                            value={signupInfo.email}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor='password'>Password</label>\n                        <input\n                            onChange={handleChange}\n                            type='password'\n                            name='password'\n                            placeholder='Enter your password...'\n                            value={signupInfo.password}\n                        />\n                    </div>\n                    <button type='submit'>Signup</button>\n                    <div className='or-divider'>\n                        <span>OR</span>\n                    </div>\n\n                    {/* --- 5. USE THE NEW GOOGLELOGIN COMPONENT --- */}\n                    <div className='google-login-container'>\n                        <GoogleLogin\n                            onSuccess={handleGoogleSuccess}\n                            onError={handleGoogleFailure}\n                        />\n                    </div>\n\n                    <span>Already have an account?\n                        <Link to=\"/login\"> Login</Link>\n                    </span>\n                </form>\n                <ToastContainer />\n            </div>\n        </GoogleOAuthProvider>\n    );\n}\n\nexport default Signup;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}