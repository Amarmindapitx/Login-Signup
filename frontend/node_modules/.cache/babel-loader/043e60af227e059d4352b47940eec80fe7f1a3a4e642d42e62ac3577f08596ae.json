{"ast":null,"code":"var _jsxFileName = \"S:\\\\login-sign-page\\\\frontend\\\\src\\\\pages\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { handleError, handleSuccess } from '../utils';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [signupInfo, setSignupInfo] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  // --- REPLACE WITH YOUR GOOGLE CLIENT ID ---\n  const googleClientId = \"YOUR_GOOGLE_CLIENT_ID.apps.googleusercontent.com\";\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSignupInfo(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSignup = async e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      password\n    } = signupInfo;\n    if (!name || !email || !password) {\n      return handleError('Name, email, and password are required');\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/signup\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(signupInfo)\n      });\n      const result = await response.json();\n      const {\n        success,\n        message,\n        error\n      } = result;\n      if (success) {\n        handleSuccess(message);\n        setTimeout(() => navigate('/login'), 1000);\n      } else {\n        var _error$details, _error$details$;\n        handleError(message || (error === null || error === void 0 ? void 0 : (_error$details = error.details) === null || _error$details === void 0 ? void 0 : (_error$details$ = _error$details[0]) === null || _error$details$ === void 0 ? void 0 : _error$details$.message) || \"Signup failed\");\n      }\n    } catch (err) {\n      handleError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGoogleSuccess = async credentialResponse => {\n    if (!(credentialResponse !== null && credentialResponse !== void 0 && credentialResponse.credential)) {\n      return handleError(\"Google login did not return a credential\");\n    }\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/google-signup\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: credentialResponse.credential\n        })\n      });\n      const result = await response.json();\n      const {\n        success,\n        message,\n        jwtToken,\n        name,\n        email\n      } = result;\n      if (success) {\n        handleSuccess(message);\n        if (jwtToken) localStorage.setItem('token', jwtToken);\n        if (name && email) localStorage.setItem('loggedInUser', JSON.stringify({\n          name,\n          email\n        }));\n        setTimeout(() => navigate('/home'), 1000);\n      } else {\n        handleError(message || \"Google signup failed\");\n      }\n    } catch (err) {\n      handleError(err.message);\n    }\n  };\n  const handleGoogleFailure = error => {\n    console.error(\"Google login failed\", error);\n    handleError(\"Google signup failed. Please try again.\");\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: googleClientId,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSignup,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleChange,\n            type: \"text\",\n            name: \"name\",\n            autoFocus: true,\n            placeholder: \"Enter your name...\",\n            value: signupInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleChange,\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Enter your email...\",\n            value: signupInfo.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleChange,\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Enter your password...\",\n            value: signupInfo.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? \"Signing up...\" : \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"or-divider\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"OR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"google-login-container\",\n          children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            onSuccess: handleGoogleSuccess,\n            onError: handleGoogleFailure\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"fE/JC1uM6s6A/iz8GD2aiY4Cq9Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","Link","useNavigate","ToastContainer","GoogleOAuthProvider","GoogleLogin","handleError","handleSuccess","jsxDEV","_jsxDEV","Signup","_s","signupInfo","setSignupInfo","name","email","password","loading","setLoading","navigate","googleClientId","handleChange","e","value","target","prev","handleSignup","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","success","message","error","setTimeout","_error$details","_error$details$","details","err","handleGoogleSuccess","credentialResponse","credential","token","jwtToken","localStorage","setItem","handleGoogleFailure","console","clientId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","type","autoFocus","placeholder","disabled","onSuccess","onError","to","_c","$RefreshReg$"],"sources":["S:/login-sign-page/frontend/src/pages/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { handleError, handleSuccess } from '../utils';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Signup() {\n  const [signupInfo, setSignupInfo] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  // --- REPLACE WITH YOUR GOOGLE CLIENT ID ---\n  const googleClientId = \"YOUR_GOOGLE_CLIENT_ID.apps.googleusercontent.com\";\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setSignupInfo(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSignup = async (e) => {\n    e.preventDefault();\n    const { name, email, password } = signupInfo;\n\n    if (!name || !email || !password) {\n      return handleError('Name, email, and password are required');\n    }\n\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/signup\", {\n        method: \"POST\",\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(signupInfo),\n      });\n      const result = await response.json();\n      const { success, message, error } = result;\n\n      if (success) {\n        handleSuccess(message);\n        setTimeout(() => navigate('/login'), 1000);\n      } else {\n        handleError(message || error?.details?.[0]?.message || \"Signup failed\");\n      }\n    } catch (err) {\n      handleError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGoogleSuccess = async (credentialResponse) => {\n    if (!credentialResponse?.credential) {\n      return handleError(\"Google login did not return a credential\");\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/google-signup\", {\n        method: \"POST\",\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ token: credentialResponse.credential }),\n      });\n\n      const result = await response.json();\n      const { success, message, jwtToken, name, email } = result;\n\n      if (success) {\n        handleSuccess(message);\n        if (jwtToken) localStorage.setItem('token', jwtToken);\n        if (name && email) localStorage.setItem('loggedInUser', JSON.stringify({ name, email }));\n        setTimeout(() => navigate('/home'), 1000);\n      } else {\n        handleError(message || \"Google signup failed\");\n      }\n    } catch (err) {\n      handleError(err.message);\n    }\n  };\n\n  const handleGoogleFailure = (error) => {\n    console.error(\"Google login failed\", error);\n    handleError(\"Google signup failed. Please try again.\");\n  };\n\n  return (\n    <GoogleOAuthProvider clientId={googleClientId}>\n      <div className='container'>\n        <h1>Signup</h1>\n        <form onSubmit={handleSignup}>\n          <div>\n            <label htmlFor='name'>Name</label>\n            <input\n              onChange={handleChange}\n              type='text'\n              name='name'\n              autoFocus\n              placeholder='Enter your name...'\n              value={signupInfo.name}\n            />\n          </div>\n\n          <div>\n            <label htmlFor='email'>Email</label>\n            <input\n              onChange={handleChange}\n              type='email'\n              name='email'\n              placeholder='Enter your email...'\n              value={signupInfo.email}\n            />\n          </div>\n\n          <div>\n            <label htmlFor='password'>Password</label>\n            <input\n              onChange={handleChange}\n              type='password'\n              name='password'\n              placeholder='Enter your password...'\n              value={signupInfo.password}\n            />\n          </div>\n\n          <button type='submit' disabled={loading}>\n            {loading ? \"Signing up...\" : \"Signup\"}\n          </button>\n\n          <div className='or-divider'>\n            <span>OR</span>\n          </div>\n\n          <div className='google-login-container'>\n            <GoogleLogin\n              onSuccess={handleGoogleSuccess}\n              onError={handleGoogleFailure}\n            />\n          </div>\n\n          <span>\n            Already have an account? <Link to=\"/login\">Login</Link>\n          </span>\n        </form>\n        <ToastContainer />\n      </div>\n    </GoogleOAuthProvider>\n  );\n}\n\nexport default Signup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}