{"ast":null,"code":"var _jsxFileName = \"S:\\\\login-sign-page\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google'; // Import Google components\nimport { handleError, handleSuccess } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [loginInfo, setLoginInfo] = useState({\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n\n  // --- 1. ADD YOUR GOOGLE CLIENT ID HERE ---\n  const googleClientId = \"438675795459-cm0g2oguf5cq67jck34gpfa015vq5u23.apps.googleusercontent.com\";\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginInfo(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = loginInfo;\n    if (!email || !password) {\n      return handleError('Email and password are required');\n    }\n    try {\n      const url = \"http://localhost:8080/auth/login\";\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(loginInfo)\n      });\n      const result = await response.json();\n      const {\n        success,\n        message,\n        jwtToken,\n        name,\n        email: userEmail,\n        error\n      } = result;\n      if (success) {\n        handleSuccess(message);\n        localStorage.setItem('token', jwtToken);\n        // Store user info as an object\n        localStorage.setItem('loggedInUser', JSON.stringify({\n          name,\n          email: userEmail\n        }));\n        setTimeout(() => {\n          navigate('/home');\n        }, 1000);\n      } else {\n        handleError(message || (error === null || error === void 0 ? void 0 : error.details[0].message));\n      }\n    } catch (err) {\n      handleError(err.message);\n    }\n  };\n\n  // --- 2. ADD GOOGLE LOGIN HANDLERS (SAME AS SIGNUP) ---\n  const handleGoogleSuccess = async credentialResponse => {\n    try {\n      // We reuse the same endpoint for signup and login\n      const url = \"http://localhost:8080/auth/google-signup\";\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: credentialResponse.credential\n        })\n      });\n      const result = await response.json();\n      const {\n        success,\n        message,\n        jwtToken,\n        name,\n        email\n      } = result;\n      if (success) {\n        handleSuccess(message);\n        localStorage.setItem('token', jwtToken);\n        localStorage.setItem('loggedInUser', JSON.stringify({\n          name,\n          email\n        }));\n        setTimeout(() => navigate('/home'), 1000);\n      } else {\n        handleError(message);\n      }\n    } catch (err) {\n      handleError(err.message);\n    }\n  };\n  const handleGoogleFailure = error => {\n    console.error(\"Google login failed\", error);\n    handleError(\"Google login failed. Please try again.\");\n  };\n  return (\n    /*#__PURE__*/\n    // --- 3. WRAP THE COMPONENT WITH THE PROVIDER ---\n    _jsxDEV(GoogleOAuthProvider, {\n      clientId: googleClientId,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange,\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Enter your email...\",\n              value: loginInfo.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange,\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Enter your password...\",\n              value: loginInfo.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"or-divider\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"OR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"google-login-container\",\n            children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n              onSuccess: handleGoogleSuccess,\n              onError: handleGoogleFailure\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: \" Signup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(Login, \"W0gqSEhvBhEnhhtZlnfDF764fv8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","ToastContainer","GoogleOAuthProvider","GoogleLogin","handleError","handleSuccess","jsxDEV","_jsxDEV","Login","_s","loginInfo","setLoginInfo","email","password","navigate","googleClientId","handleChange","e","name","value","target","prev","handleLogin","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","result","json","success","message","jwtToken","userEmail","error","localStorage","setItem","setTimeout","details","err","handleGoogleSuccess","credentialResponse","token","credential","handleGoogleFailure","console","clientId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","type","placeholder","onSuccess","onError","to","_c","$RefreshReg$"],"sources":["S:/login-sign-page/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google'; // Import Google components\nimport { handleError, handleSuccess } from '../utils';\n\nfunction Login() {\n    const [loginInfo, setLoginInfo] = useState({\n        email: '',\n        password: ''\n    });\n\n    const navigate = useNavigate();\n\n    // --- 1. ADD YOUR GOOGLE CLIENT ID HERE ---\n    const googleClientId = \"438675795459-cm0g2oguf5cq67jck34gpfa015vq5u23.apps.googleusercontent.com\";\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setLoginInfo(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        const { email, password } = loginInfo;\n        if (!email || !password) {\n            return handleError('Email and password are required');\n        }\n        try {\n            const url = \"http://localhost:8080/auth/login\";\n            const response = await fetch(url, {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(loginInfo)\n            });\n            const result = await response.json();\n            const { success, message, jwtToken, name, email: userEmail, error } = result;\n            if (success) {\n                handleSuccess(message);\n                localStorage.setItem('token', jwtToken);\n                // Store user info as an object\n                localStorage.setItem('loggedInUser', JSON.stringify({ name, email: userEmail }));\n                setTimeout(() => {\n                    navigate('/home');\n                }, 1000);\n            } else {\n                handleError(message || error?.details[0].message);\n            }\n        } catch (err) {\n            handleError(err.message);\n        }\n    };\n\n    // --- 2. ADD GOOGLE LOGIN HANDLERS (SAME AS SIGNUP) ---\n    const handleGoogleSuccess = async (credentialResponse) => {\n        try {\n            // We reuse the same endpoint for signup and login\n            const url = \"http://localhost:8080/auth/google-signup\";\n            const response = await fetch(url, {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ token: credentialResponse.credential })\n            });\n            const result = await response.json();\n            const { success, message, jwtToken, name, email } = result;\n            if (success) {\n                handleSuccess(message);\n                localStorage.setItem('token', jwtToken);\n                localStorage.setItem('loggedInUser', JSON.stringify({ name, email }));\n                setTimeout(() => navigate('/home'), 1000);\n            } else {\n                handleError(message);\n            }\n        } catch (err) {\n            handleError(err.message);\n        }\n    };\n\n    const handleGoogleFailure = (error) => {\n        console.error(\"Google login failed\", error);\n        handleError(\"Google login failed. Please try again.\");\n    };\n\n    return (\n        // --- 3. WRAP THE COMPONENT WITH THE PROVIDER ---\n        <GoogleOAuthProvider clientId={googleClientId}>\n            <div className='container'>\n                <h1>Login</h1>\n                <form onSubmit={handleLogin}>\n                    <div>\n                        <label htmlFor='email'>Email</label>\n                        <input\n                            onChange={handleChange}\n                            type='email'\n                            name='email'\n                            placeholder='Enter your email...'\n                            value={loginInfo.email}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor='password'>Password</label>\n                        <input\n                            onChange={handleChange}\n                            type='password'\n                            name='password'\n                            placeholder='Enter your password...'\n                            value={loginInfo.password}\n                        />\n                    </div>\n                    <button type='submit'>Login</button>\n\n                    <div className='or-divider'>\n                        <span>OR</span>\n                    </div>\n\n                    {/* --- 4. ADD THE GOOGLE LOGIN BUTTON --- */}\n                    <div className='google-login-container'>\n                        <GoogleLogin\n                            onSuccess={handleGoogleSuccess}\n                            onError={handleGoogleFailure}\n                        />\n                    </div>\n\n                    <span>Don't have an account?\n                        <Link to=\"/signup\"> Signup</Link>\n                    </span>\n                </form>\n                <ToastContainer />\n            </div>\n        </GoogleOAuthProvider>\n    );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}